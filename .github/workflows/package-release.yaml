name: Package and Release

on:
  push:
    branches: ["main"]
#    tags:
#      - '*'
  workflow_dispatch:

jobs:
  all:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        include:
          - os: windows-latest
            artifact_name: geodepot-win
            conda_exe: C:\Miniconda\Scripts\conda.exe
            geodepot_exe: \dist\geodepot\geodepot.exe
          - os: ubuntu-latest
            artifact_name: geodepot-ubuntu
            conda_exe: conda
            geodepot_exe: /dist/geodepot/geodepot
          - os: macos-latest
            artifact_name: geodepot-macos
            conda_exe: conda
            geodepot_exe: /dist/geodepot/geodepot

    steps:
    # Install and Test
    - uses: 3DGI/geodepot/.github/workflows/workflow-install-test.yaml@main
      with:
        os: ${{ matrix.os }}
        conda_exe: ${{ matrix.conda_exe }}

    # Package
    - if: runner.os == 'Linux'
      name: Pyinstaller package Linux
      run: |
        pyinstaller --name geodepot --onedir --noconfirm --optimize 2 --add-data $CONDA/share/proj/proj.db:share/proj/proj.db --collect-all pdal --collect-all osgeo src/geodepot/__main__.py
    - if: runner.os == 'macOS'
      name: Pyinstaller package macOS
      run: |
        pyinstaller --name geodepot --onedir --console --noconfirm --optimize 2 --add-data $CONDA/share/proj/proj.db:share/proj/proj.db --collect-all pdal --collect-all osgeo src/geodepot/__main__.py
    - if: runner.os == 'Windows'
      name: Pyinstaller package Windows
      run: |
        pyinstaller --name geodepot --onedir --console --noconfirm --optimize 2 --add-data C:/Miniconda/Library/share/proj/proj.db:share/proj/proj.db --collect-all pdal --collect-all osgeo src/geodepot/__main__.py

    # Test exe
    - name: Test exe
      run: |
        ${{ github.workspace }}${{ matrix.geodepot_exe }} init
        ${{ github.workspace }}${{ matrix.geodepot_exe }} add wippolder tests/data/sources/wippolder/wippolder.gpkg
        ${{ github.workspace }}${{ matrix.geodepot_exe }} list
        ${{ github.workspace }}${{ matrix.geodepot_exe }} show wippolder/wippolder.gpkg

    # Create package archive
    - if: runner.os == 'Linux'
      name: Create package archive Linux
      run: |
        cd dist
        zip -r geodepot-ubuntu.zip geodepot
        sha256sum geodepot-ubuntu.zip > geodepot-ubuntu.zip.sha256sum
        rm -rf geodepot
    - if: runner.os == 'macOS'
      name: Create package archive macOS
      run: |
        cd dist
        zip -r geodepot-macos.zip geodepot
        shasum -a 256 geodepot-macos.zip > geodepot-macos.zip.sha256sum
        rm -rf geodepot
    - if: runner.os == 'Windows'
      name: Create package archive Windows
      run: |
        cd dist
        7z a geodepot-win.zip geodepot
        certUtil -hashfile geodepot-win.zip SHA256 > geodepot-win.zip.sha256sum
        rm -r -fo geodepot

    - name: List contents
      run: |
        ls dist
    - name: Upload binaries to
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/*
        retention-days: 7
